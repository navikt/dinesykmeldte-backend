name: Deploy to dev and prod
on:
  push:
    branches:
      - master
    paths:
      - 'dinesykmeldte-backend/**'
      - '.github/workflows/deploy.yml'
      - 'build.gradle.kts'

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@master
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --org=teamsykmelding
  snyk-test:
    name: Checkout code and analyze dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@master
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --org=teamsykmelding --severity-threshold=high
  build-backend:
    permissions:
      contents: "read"
      id-token: "write"
    name: Checkout code and create docker tag
    runs-on: ubuntu-latest
    steps:
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1.0.5
      - name: Setup gradle dependency cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/.*gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run tests
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew :dinesykmeldte-backend:test
      - name: Build jar
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew :dinesykmeldte-backend:shadowJar -x test
      - name: backend-docker-build-push
        uses: nais/docker-build-push@v0
        id: backend-docker-build-push
        with:
          dockerfile: ./dinesykmeldte-backend/Dockerfile
          docker_context: dinesykmeldte-backend
          image_suffix: dinesykmeldte-backend
          team: teamsykmelding
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

    outputs:
      image-backend: ${{ steps.backend-docker-build-push.outputs.image }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [snyk-test, build-backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy to Preprod
        uses: nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: dinesykmeldte-backend/naiserator-dev.yaml
          VAR: image-backend=${{ needs.build-backend.outputs.image-backend }}
      - name: Deploy to Prod
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: dinesykmeldte-backend/naiserator-prod.yaml
          VAR: image-backend=${{ needs.build-backend.outputs.image-backend }}